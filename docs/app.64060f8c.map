{"version":3,"sources":["node_modules/hyperapp/src/index.js","node_modules/underscore/underscore.js","node_modules/sudoku/index.js","src/storage.js","src/actions.js","src/state.js","src/utils.js","src/view.js","src/app.js"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","nodeName","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","updateAttribute","insertBefore","removeElement","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","setTimeout","target","source","out","value","slice","eventListener","event","currentTarget","events","type","oldValue","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","done","removeChild","removeChildren","ondestroy","onremove","STOARAGE_KEY","get","localStorage","getItem","JSON","parse","set","setItem","stringify","getBoard","setBoard","countUsed","board","filter","reduce","prev","curr","arr","init","populate","puzzle","sudoku","makepuzzle","p","forEach","x","y","undefined","isOriginal","numberAmounts","activeCell","activate","fill","newNumberAmounts","newBoard","newActiveCell","storage","times","repeat","iteratee","Array","SudokuCell","cell","active","classes","join","SudokuPartGrid","utils","SudokuMainGrid","NumberButton","body"],"mappings":"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","file":"app.64060f8c.map","sourceRoot":"..","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","//     Underscore.js 1.1.6\n//     (c) 2011 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore is freely distributable under the MIT license.\n//     Portions of Underscore are inspired or borrowed from Prototype,\n//     Oliver Steele's Functional, and John Resig's Micro-Templating.\n//     For all details and documentation:\n//     http://documentcloud.github.com/underscore\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var slice            = ArrayProto.slice,\n      unshift          = ArrayProto.unshift,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) { return new wrapper(obj); };\n\n  // Export the Underscore object for **CommonJS**, with backwards-compatibility\n  // for the old `require()` API. If we're not in CommonJS, add `_` to the\n  // global object.\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = _;\n    _._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.1.6';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects implementing `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (_.isNumber(obj.length)) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = memo !== void 0;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial && index === 0) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(\"Reduce of empty array with no initial value\");\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return memo !== void 0 ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var reversed = (_.isArray(obj) ? obj.slice() : _.toArray(obj)).reverse();\n    return _.reduce(reversed, iterator, memo, context);\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    each(obj, function(value, index, list) {\n      if (!iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result = iterator.call(context, value, index, list)) return breaker;\n    });\n    return result;\n  };\n\n  // Determine if a given value is included in the array or object using `===`.\n  // Aliased as `contains`.\n  _.include = _.contains = function(obj, target) {\n    var found = false;\n    if (obj == null) return found;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    any(obj, function(value) {\n      if (found = value === target) return true;\n    });\n    return found;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    return _.map(obj, function(value) {\n      return (method.call ? method || value : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Return the maximum element or (element-based computation).\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj)) return Math.max.apply(Math, obj);\n    var result = {computed : -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj)) return Math.min.apply(Math, obj);\n    var result = {computed : Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, iterator, context) {\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria, b = right.criteria;\n      return a < b ? -1 : a > b ? 1 : 0;\n    }), 'value');\n  };\n\n  // Use a comparator function to figure out at what index an object should\n  // be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator) {\n    iterator || (iterator = _.identity);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >> 1;\n      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(iterable) {\n    if (!iterable)                return [];\n    if (iterable.toArray)         return iterable.toArray();\n    if (_.isArray(iterable))      return iterable;\n    if (_.isArguments(iterable))  return slice.call(iterable);\n    return _.values(iterable);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    return _.toArray(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head`. The **guard** check allows it to work\n  // with `_.map`.\n  _.first = _.head = function(array, n, guard) {\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail`.\n  // Especially useful on the arguments object. Passing an **index** will return\n  // the rest of the values in the array from that index onward. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = function(array, index, guard) {\n    return slice.call(array, (index == null) || guard ? 1 : index);\n  };\n\n  // Get the last element of an array.\n  _.last = function(array) {\n    return array[array.length - 1];\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, function(value){ return !!value; });\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array) {\n    return _.reduce(array, function(memo, value) {\n      if (_.isArray(value)) return memo.concat(_.flatten(value));\n      memo[memo.length] = value;\n      return memo;\n    }, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    var values = slice.call(arguments, 1);\n    return _.filter(array, function(value){ return !_.include(values, value); });\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted) {\n    return _.reduce(array, function(memo, el, i) {\n      if (0 == i || (isSorted === true ? _.last(memo) != el : !_.include(memo, el))) memo[memo.length] = el;\n      return memo;\n    }, []);\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersect = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) results[i] = _.pluck(args, \"\" + i);\n    return results;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i, l;\n    if (isSorted) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);\n    for (i = 0, l = array.length; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item) {\n    if (array == null) return -1;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);\n    var i = array.length;\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Binding with arguments is also known as `curry`.\n  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.\n  // We check for `func.bind` first, to fail fast when `func` is undefined.\n  _.bind = function(func, obj) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(obj, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length == 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return hasOwnProperty.call(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(func, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Internal function used to implement `_.throttle` and `_.debounce`.\n  var limit = function(func, wait, debounce) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var throttler = function() {\n        timeout = null;\n        func.apply(context, args);\n      };\n      if (debounce) clearTimeout(timeout);\n      if (debounce || !timeout) timeout = setTimeout(throttler, wait);\n    };\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    return limit(func, wait, false);\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds.\n  _.debounce = function(func, wait) {\n    return limit(func, wait, true);\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      return memo = func.apply(this, arguments);\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func].concat(slice.call(arguments));\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = slice.call(arguments);\n    return function() {\n      var args = slice.call(arguments);\n      for (var i=funcs.length-1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) { return func.apply(this, arguments); }\n    };\n  };\n\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (hasOwnProperty.call(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    return _.map(obj, _.identity);\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    return _.filter(_.keys(obj), function(key){ return _.isFunction(obj[key]); }).sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        if (source[prop] !== void 0) obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        if (obj[prop] == null) obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    // Check object identity.\n    if (a === b) return true;\n    // Different types?\n    var atype = typeof(a), btype = typeof(b);\n    if (atype != btype) return false;\n    // Basic equality test (watch out for coercions).\n    if (a == b) return true;\n    // One is falsy and the other truthy.\n    if ((!a && b) || (a && !b)) return false;\n    // Unwrap any wrapped objects.\n    if (a._chain) a = a._wrapped;\n    if (b._chain) b = b._wrapped;\n    // One of them implements an isEqual()?\n    if (a.isEqual) return a.isEqual(b);\n    // Check dates' integer values.\n    if (_.isDate(a) && _.isDate(b)) return a.getTime() === b.getTime();\n    // Both are NaN?\n    if (_.isNaN(a) && _.isNaN(b)) return false;\n    // Compare regular expressions.\n    if (_.isRegExp(a) && _.isRegExp(b))\n      return a.source     === b.source &&\n             a.global     === b.global &&\n             a.ignoreCase === b.ignoreCase &&\n             a.multiline  === b.multiline;\n    // If a is not an object by this point, we can't handle it.\n    if (atype !== 'object') return false;\n    // Check for different array lengths before comparing contents.\n    if (a.length && (a.length !== b.length)) return false;\n    // Nothing else worked, deep compare the contents.\n    var aKeys = _.keys(a), bKeys = _.keys(b);\n    // Different object sizes?\n    if (aKeys.length != bKeys.length) return false;\n    // Recursive comparison of contents.\n    for (var key in a) if (!(key in b) || !_.isEqual(a[key], b[key])) return false;\n    return true;\n  };\n\n  // Is a given array or object empty?\n  _.isEmpty = function(obj) {\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (hasOwnProperty.call(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType == 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an arguments object?\n  _.isArguments = function(obj) {\n    return !!(obj && hasOwnProperty.call(obj, 'callee'));\n  };\n\n  // Is a given value a function?\n  _.isFunction = function(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  };\n\n  // Is a given value a string?\n  _.isString = function(obj) {\n    return !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n  };\n\n  // Is a given value a number?\n  _.isNumber = function(obj) {\n    return !!(obj === 0 || (obj && obj.toExponential && obj.toFixed));\n  };\n\n  // Is the given value `NaN`? `NaN` happens to be the only value in JavaScript\n  // that does not equal itself.\n  _.isNaN = function(obj) {\n    return obj !== obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false;\n  };\n\n  // Is a given value a date?\n  _.isDate = function(obj) {\n    return !!(obj && obj.getTimezoneOffset && obj.setUTCFullYear);\n  };\n\n  // Is the given value a regular expression?\n  _.isRegExp = function(obj) {\n    return !!(obj && obj.test && obj.exec && (obj.ignoreCase || obj.ignoreCase === false));\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function (n, iterator, context) {\n    for (var i = 0; i < n; i++) iterator.call(context, i);\n  };\n\n  // Add your own custom functions to the Underscore object, ensuring that\n  // they're correctly added to the OOP wrapper as well.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      addToWrapper(name, _[name] = obj[name]);\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = idCounter++;\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(str, data) {\n    var c  = _.templateSettings;\n    var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +\n      'with(obj||{}){__p.push(\\'' +\n      str.replace(/\\\\/g, '\\\\\\\\')\n         .replace(/'/g, \"\\\\'\")\n         .replace(c.interpolate, function(match, code) {\n           return \"',\" + code.replace(/\\\\'/g, \"'\") + \",'\";\n         })\n         .replace(c.evaluate || null, function(match, code) {\n           return \"');\" + code.replace(/\\\\'/g, \"'\")\n                              .replace(/[\\r\\n\\t]/g, ' ') + \"__p.push('\";\n         })\n         .replace(/\\r/g, '\\\\r')\n         .replace(/\\n/g, '\\\\n')\n         .replace(/\\t/g, '\\\\t')\n         + \"');}return __p.join('');\";\n    var func = new Function('obj', tmpl);\n    return data ? func(data) : func;\n  };\n\n  // The OOP Wrapper\n  // ---------------\n\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  var wrapper = function(obj) { this._wrapped = obj; };\n\n  // Expose `wrapper.prototype` as `_.prototype`\n  _.prototype = wrapper.prototype;\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj, chain) {\n    return chain ? _(obj).chain() : obj;\n  };\n\n  // A method to easily add functions to the OOP wrapper.\n  var addToWrapper = function(name, func) {\n    wrapper.prototype[name] = function() {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    };\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    wrapper.prototype[name] = function() {\n      method.apply(this._wrapped, arguments);\n      return result(this._wrapped, this._chain);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    wrapper.prototype[name] = function() {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    };\n  });\n\n  // Start chaining a wrapped Underscore object.\n  wrapper.prototype.chain = function() {\n    this._chain = true;\n    return this;\n  };\n\n  // Extracts the result from a wrapped and chained object.\n  wrapper.prototype.value = function() {\n    return this._wrapped;\n  };\n\n})();\n","// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\n\nvar undefined;\nvar _ = require('underscore');\n\nfunction makepuzzle(board) {\n\tvar puzzle  = [];\n\tvar deduced = makeArray(81, null);\n\tvar order   = _.range(81);\n\n\tshuffleArray(order);\n\n\tfor (var i = 0; i < order.length; i++) {\n\t\tvar pos = order[i];\n\n\t\tif (deduced[pos] == null) {\n\t\t\tpuzzle.push({pos:pos, num:board[pos]});\n\t\t\tdeduced[pos] = board[pos];\n\t\t\tdeduce(deduced);\n\t\t}\n\t}\n\n\tshuffleArray(puzzle);\n\n\tfor (var i = puzzle.length - 1; i >= 0; i--) {\n\t\tvar e = puzzle[i];\n\t\tremoveElement(puzzle, i);\n\n\t\tvar rating = checkpuzzle(boardforentries(puzzle), board);\n\t\tif (rating == -1) {\n\t\t\tpuzzle.push(e);\n\t\t}\n\t}\n\n\treturn boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n\tvar total = 0;\n\n\tfor (var i = 0; i < samples; i++) {\n\t\tvar tuple = solveboard(puzzle);\n\n\t\tif (tuple.answer == null) {\n\t\t\treturn -1;\n\t\t}\n\n\t\ttotal += tuple.state.length;\n\t}\n\n\treturn total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n\tif (board == undefined) {\n\t\tboard = null;\n\t}\n\n\tvar tuple1 = solveboard(puzzle);\n\tif (tuple1.answer == null) {\n\t\treturn -1;\n\t}\n\n\tif (board != null && boardmatches(board, tuple1.answer) == false) {\n\t\treturn -1;\n\t}\n\n\tvar difficulty = tuple1.state.length;\n\tvar tuple2     = solvenext(tuple1.state);\n\n\tif (tuple2.answer != null) {\n\t\treturn -1;\n\t}\n\t\n\treturn difficulty;\n}\n\nfunction solvepuzzle(board) {\n    return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n\tvar board   = [].concat(original);\n\tvar guesses = deduce(board);\n\n\tif (guesses == null) {\n\t\treturn {state:[], answer:board};\n\t}\n\n\tvar track = [{guesses:guesses, count:0, board:board}];\n\treturn solvenext(track);\n}\n\nfunction solvenext(remembered) {\n    while (remembered.length > 0) {\n    \tvar tuple1 = remembered.pop();\n\n    \tif (tuple1.count >= tuple1.guesses.length) {\n    \t\tcontinue;\n    \t}\n \n    \tremembered.push({guesses:tuple1.guesses, count:tuple1.count+1, board:tuple1.board});\n    \tvar workspace = [].concat(tuple1.board);\n    \tvar tuple2    = tuple1.guesses[tuple1.count];\n\n    \tworkspace[tuple2.pos] = tuple2.num;\n\n    \tvar guesses = deduce(workspace);\n\n    \tif (guesses == null) {\n\t    \treturn {state:remembered, answer:workspace};\n\t    }\n\n    \tremembered.push({guesses:guesses, count:0, board:workspace});\n\t}\n\n    return {state:[], answer:null};\n}\n\nfunction deduce(board) {\n\twhile (true) {\n\t\tvar stuck = true;\n\t\tvar guess = null;\n\t\tvar count = 0;\n\n\t    // fill in any spots determined by direct conflicts\n\t    var tuple1  = figurebits(board);\n\t    var allowed = tuple1.allowed;\n\t    var needed  = tuple1.needed;\n\n\t    for (var pos = 0; pos < 81; pos++) {\n\t    \tif (board[pos] == null) {\n\t    \t\tvar numbers = listbits(allowed[pos]);\n\t    \t\tif (numbers.length == 0) {\n\t    \t\t\treturn [];\n\t    \t\t}\n\t    \t\telse if (numbers.length == 1) {\n\t    \t\t\tboard[pos] = numbers[0];\n\t    \t\t\tstuck = false;\n\t    \t\t}\n\t    \t\telse if (stuck == true) {\n\t    \t\t\tvar t = _.map(numbers, function(val, key) {\n\t    \t\t\t\treturn {pos:pos, num:val};\n\t    \t\t\t});\n\n\t    \t\t\tvar tuple2 = pickbetter(guess, count, t);\n\t    \t\t\tguess = tuple2.guess;\n\t    \t\t\tcount = tuple2.count;\n\t    \t\t}\n\t    \t}\n\t    }\n\n\t    if (stuck == false) {\n\t\t    var tuple3  = figurebits(board);\n\t\t    allowed = tuple3.allowed;\n\t\t    needed  = tuple3.needed;\n\t    }\n\n    \t// fill in any spots determined by elimination of other locations\n    \tfor (var axis = 0; axis < 3; axis++) {\n\t    \tfor (var x = 0; x < 9; x++) {\n        \t\tvar numbers = listbits(needed[axis * 9 + x]);\n\n\t\t    \tfor (var i = 0; i < numbers.length; i++) {\n\t\t    \t\tvar n     = numbers[i];\n\t\t            var bit   = 1 << n;\n          \t\t\tvar spots = [];\n\n\t\t\t    \tfor (var y = 0; y < 9; y++) {\n\t\t\t    \t\tvar pos = posfor(x, y, axis);\n\t\t\t    \t\tif (allowed[pos] & bit) {\n\t\t\t\t    \t\tspots.push(pos);\n\t\t\t\t    \t}\n\t\t\t    \t}\n\n\t\t\t    \tif (spots.length == 0) {\n\t\t\t\t    \treturn [];\n\t\t\t\t    }\n\t\t\t\t    else if (spots.length == 1) {\n\t\t\t\t\t    board[spots[0]] = n;\n\t\t\t\t\t    stuck = false;\n\t\t\t\t\t}\n\t\t\t\t\telse if (stuck) {\n\t\t    \t\t\tvar t = _.map(spots, function(val, key) {\n\t\t    \t\t\t\treturn {pos:val, num:n};\n\t\t    \t\t\t});\n\n\t\t    \t\t\tvar tuple4 = pickbetter(guess, count, t);\n\t\t    \t\t\tguess = tuple4.guess;\n\t\t    \t\t\tcount = tuple4.count;\n\t\t\t\t\t}\n\t\t    \t}\n\t    \t}\n    \t}\n\n    \tif (stuck == true) {\n    \t\tif (guess != null) {\n    \t\t\tshuffleArray(guess);\n    \t\t}\n\n    \t\treturn guess;\n    \t}\n\t}\n}\n\nfunction figurebits(board) {\n\tvar needed  = [];\n\tvar allowed = _.map(board, function(val, key) {\n\t\treturn val == null ? 511 : 0;\n\t}, []);\n\n\tfor (var axis = 0; axis < 3; axis++) {\n\t\tfor (var x = 0; x < 9; x++) {\n\t\t\tvar bits = axismissing(board, x, axis);\n\t\t\tneeded.push(bits);\n\n\t\t    for (var y = 0; y < 9; y++) {\n\t\t    \tvar pos = posfor(x, y, axis);\n\t\t        allowed[pos] = allowed[pos] & bits;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {allowed:allowed, needed:needed};\n}\n\nfunction posfor(x, y, axis) {\n\tif (axis == undefined) { axis = 0; }\n\n    if (axis == 0) {\n\t    return x * 9 + y;\n\t}\n\telse if (axis == 1) {\n\t\treturn y * 9 + x;\n\t}\n\n\treturn ([0,3,6,27,30,33,54,57,60][x] + [0,1,2,9,10,11,18,19,20][y])\n}\n\nfunction axisfor(pos, axis) {\n\tif (axis == 0) {\n\t\treturn Math.floor(pos / 9);\n\t}\n\telse if (axis == 1) {\n\t\treturn pos % 9;\n\t}\n\n\treturn Math.floor(pos / 27) * 3 + Math.floor(pos / 3) % 3;\n}\n\nfunction axismissing(board, x, axis) {\n\tvar bits = 0;\n\n\tfor (var y = 0; y < 9; y++) {\n\t\tvar e = board[posfor(x, y, axis)];\n\n\t\tif (e != null) {\n\t\t\tbits |= 1 << e;\n\t\t}\n\t}\n\n\treturn 511 ^ bits;\n}\n\nfunction listbits(bits) {\n    var list = [];\n\tfor (var y = 0; y < 9; y++) {\n\t\tif ((bits & (1 << y)) != 0) {\n\t\t\tlist.push(y);\n\t\t}\n\t}\n\n  return list;\n}\n\nfunction allowed(board, pos) {\n\tvar bits = 511;\n\n\tfor (var axis = 0; axis < 3; axis++) {\n\t\tvar x = axisfor(pos, axis);\n\t\tbits = bits & axismissing(board, x, axis);\n\t}\n\n\treturn bits;\n}\n\n// TODO: make sure callers utilize the return value correctly\nfunction pickbetter(b, c, t) {\n\tif (b == null || t.length < b.length) {\n\t\treturn {guess:t, count:1};\n\t}\n\telse if (t.length > b.length) {\n\t\treturn {guess:b, count:c};\n\t}\n\telse if (randomInt(c) == 0) {\n\t\treturn {guess:t, count:c+1};\n\t}\n\n\treturn {guess:b, count:c+1};\n}\n\nfunction boardforentries(entries) {\n\tvar board = _.map(_.range(81), function(val, key) {\n\t\treturn null;\n\t});\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar item = entries[i];\n\t\tvar pos  = item.pos;\n\t\tvar num  = item.num;\n\n\t\tboard[pos] = num;\n\t}\n\n\treturn board;\n}\n\nfunction boardmatches(b1, b2) {\n\tfor (var i = 0; i < 81; i++) {\n\t\tif (b1[i] != b2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction randomInt(max) {\n\treturn Math.floor(Math.random() * (max+1));\n}\n\nfunction shuffleArray(original) {\n\t// Swap each element with another randomly selected one.\n    for (var i = 0; i < original.length; i++) {\n        var j = i;\n        while (j == i) {\n            j = Math.floor(Math.random() * original.length);\n        }\n        var contents = original[i];\n        original[i]  = original[j];\n        original[j]  = contents;\n    }\n}\n\nfunction removeElement(array, from, to) {\n    var rest = array.slice((to || from) + 1 || array.length);\n    array.length = from < 0 ? array.length + from : from;\n    return array.push.apply(array, rest);\n};\n\nfunction makeArray(length, value) {\n\treturn _.map(_.range(length), function(val, key) {\n\t\treturn value;\n\t})\n}\n\nmodule.exports = {\n\tmakepuzzle  : function () { return makepuzzle(solvepuzzle(makeArray(81, null))); },\n\tsolvepuzzle : solvepuzzle,\n\tratepuzzle  : ratepuzzle,\n\tposfor      : posfor\n};\n\n","\nconst STOARAGE_KEY = 'hyper-sudoku-board';\n\nconst get = key => ((localStorage.getItem(key))\n  ? JSON.parse(localStorage.getItem(key))\n  : []);\n\nconst set = (key, data) => localStorage.setItem(key, JSON.stringify(data));\n\nexport default {\n  getBoard: () => get(STOARAGE_KEY),\n  setBoard: data => set(STOARAGE_KEY, data),\n};\n","import sudoku from 'sudoku';\n\nimport storage from './storage';\n\nconst countUsed = board => board\n  .filter(i => i !== null)\n  .reduce((prev, curr) => {\n    const arr = prev;\n    if (arr[curr]) {\n      arr[curr] += 1;\n    } else {\n      arr[curr] = 1;\n    }\n    return arr;\n  }, []);\n\nexport default {\n  init: () => (state, actions) => {\n    if (state.board.length < 1) {\n      actions.populate();\n    }\n  },\n\n  populate: () => {\n    const puzzle = sudoku.makepuzzle();\n    let p = 0;\n\n    const board = [];\n\n    puzzle.forEach((value, i) => {\n      const x = (i % 9);\n      const y = (i - x) / 9;\n      if (x % 3 === 0) {\n        if (x === 0) {\n          p = y - (y % 3);\n        } else {\n          p += 1;\n        }\n      }\n\n      if (board[p] === undefined) {\n        board[p] = [];\n      }\n\n      board[p].push({\n        value: value !== null ? value + 1 : '',\n        isOriginal: value !== null,\n        i: board[p].length,\n        x,\n        y,\n        p,\n      });\n    });\n\n    return {\n      board,\n      numberAmounts: countUsed(puzzle),\n      activeCell: null,\n    };\n  },\n\n  activate: activeCell => ({ activeCell }),\n\n  fill: value => ({ board, activeCell, numberAmounts }) => {\n    if (!activeCell) {\n      return null;\n    }\n\n    const { p, i } = activeCell;\n\n    if (board[p][i].isOriginal) {\n      return null;\n    }\n\n    const newNumberAmounts = numberAmounts;\n\n    if (+board[p][i].value > 0) {\n      newNumberAmounts[board[p][i].value - 1] -= 1;\n    }\n\n    const newBoard = board;\n    newBoard[p][i].value = value;\n\n    const newActiveCell = activeCell;\n    newActiveCell.value = value;\n\n    if (+newBoard[p][i].value > 0) {\n      newNumberAmounts[newBoard[p][i].value - 1] += 1;\n    }\n\n    storage.setBoard(newBoard);\n\n    return {\n      board: newBoard,\n      numberAmounts: newNumberAmounts,\n      activeCell: newActiveCell,\n    };\n  },\n};\n","import storage from './storage';\n\nexport default {\n  board: storage.getBoard(),\n  times: [],\n  activeCell: null,\n  numberAmounts: [],\n};\n","const repeat = (length, iteratee) => {\n  const out = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    out[i] = iteratee(i);\n  }\n\n  return out;\n};\n\nexport default {\n  repeat,\n};\n","import { h } from 'hyperapp';\n\nimport utils from './utils';\n\nconst SudokuCell = ({ p, i }) => (state, actions) => {\n  const cell = state.board[p][i];\n  const active = state.activeCell;\n  const classes = ['cell'];\n\n  if (active) {\n    if (active.x === cell.x || active.y === cell.y) {\n      classes.push('neighbour');\n    }\n    if (active.x === cell.x && active.y === cell.y) {\n      classes.push('selected');\n    }\n    if (active.value === +cell.value) {\n      classes.push('hilight');\n    }\n  }\n  if (cell.isOriginal) {\n    classes.push('original');\n  }\n\n  return (\n    <div class={classes.join(' ')} onclick={() => actions.activate(cell)}>\n      {cell.value}\n    </div>\n  );\n};\n\nconst SudokuPartGrid = ({ p }) => ({ board }) => {\n  if (!board[p]) {\n    return null;\n  }\n\n  return (\n    <div class='sudoku-grid'>\n      {utils.repeat(9, i => (\n        <SudokuCell i={i} p={p} />\n      ))}\n    </div>\n  );\n};\n\nconst SudokuMainGrid = () => (\n  <div class='sudoku-grid'>\n    {utils.repeat(9, i => (\n      <SudokuPartGrid p={i} />\n    ))}\n  </div>\n);\n\nconst NumberButton = ({ i }) => (state, actions) => {\n  if (state.numberAmounts[i] > 8) {\n    return (\n      <div class='number-btn disabled'>\n        <button>{1 + i}</button>\n      </div>\n    );\n  }\n\n  return (\n    <div class='number-btn' onclick={() => actions.fill(1 + i)}>\n      <button>{1 + i}</button>\n    </div>\n  );\n};\n\nexport default () => (state, actions) => (\n  <div id='holder' oncreate={() => actions.init()}>\n    <div id='sudoku'>\n      <SudokuMainGrid />\n    </div>\n    <div class='number-btns'>\n      {utils.repeat(9, i => (\n        <NumberButton i={i} />\n      ))}\n      <div class='number-btn' onclick={() => actions.fill('')}>\n        <button>x</button>\n      </div>\n    </div>\n    <div>\n      <button onclick={() => actions.populate()}>\n        New game!\n      </button>\n    </div>\n  </div>\n);\n","import { app } from 'hyperapp';\n\nimport actions from './actions';\nimport state from './state';\nimport view from './view';\n\napp(state, actions, view, document.body);\n"]}